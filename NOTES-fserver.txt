Here are some notes about fserver - the Fuego server implementation.

This server is a CGI script that provides online storage, and a rendezvous
point for Fuego objects.  Current objects supported are:
  * run requests, runs, tests, test binary packages, and boards.

Other objects that might be supported in the future include:
  *  pass-criteria, reviews, users?

== programatic interface ==
The server handles requests from ftc to put, update, query, and remove
objects, via it's web interface.

The server is a "dumb store", in that it doesn't do any intelligent handling
of the data, and just minimal visualization. It's primary purpose is to
allow sharing of objects between Fuego users and labs.

== user interface ==
The server handles showing a user interface to examine the objects on
the server.

It can show lists of objects, and the content of individual objects.

Files:
 fserver.py - the Fuego server
 fserver-server.py - a python web server (supports CGI) for testing purposes
 start_server - a shell script to start the test server
 make-otp-file - script used to create a one-time-pad file
   (which is used for authenticating operations from labs)

Data Files:
 The 'data' directory hierarchy has single files (usually json) that are
 used to represent objects, including requests, runs, tests, boards,
 and binary-packages.
  * tests - <test>.yaml files
  * runs - run-xxx.json files
  * boards - board-<host:board>.json files
  * binary-package - <binary-package>.json files
  * requests - request-xxx.json files

 The 'files' directory has aggregate files for tests, runs and binary-packages,
 as well as extracted run data for runs
  * tests - <test>.ftp files
  * runs - <run>.frp files
    * also a directory of extracted run contents for each <run>
  * binary-packages/<binary-package>.ftbp

